using NUnit.Framework;

namespace ProjectEuler
{
    public class Tests
    {
        ProjectEulerSolver solver;

        [SetUp]
        public void Setup()
        {
            solver = new ProjectEulerSolver();
        }

        [Test]
        [TestCase(0, 0)]
        [TestCase(4, 3)]
        [TestCase(6, 8)]
        [TestCase(10,23)]
        [TestCase(1000, 233168)]
        public void ReturnsSumOfMultiplesThreeAndFiveBelowN(int n, int expected)
        {
            int sum = solver.Problem1(n);
            Assert.AreEqual(expected, sum);
        }

        /* 
         Each new term in the Fibonacci sequence is generated by adding the previous two terms.
         By starting with 1 and 2, the first 10 terms will be:

            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million,
        find the sum of the even-valued terms.
        */

        [Test]
        [TestCase(1, 0)]
        [TestCase(3, 2)]
        [TestCase(89, 44)]
        [TestCase(4000000, 4613732)]
        public void ReturnsSumOfEvenFibonacciUpToNTerms(int max, int expected)
        {
            int sum = solver.Problem2(max);
            Assert.AreEqual(expected, sum);
        }

        /*
         
        The prime factors of 13195 are 5, 7, 13 and 29.

        What is the largest prime factor of the number 600,851,475,143 ?
        */

        [Test]
        [TestCase(4, 2)]
        [TestCase(6, 3)]
        [TestCase(8, 2)]
        [TestCase(9, 3)]
        [TestCase(10, 5)]
        [TestCase(13195, 29)]
        [TestCase(60085, 197)]
        [TestCase(600851, 20719)]
        public void ReturnLargestPrimeFactor(long num, long expected)
        {
            long largestPrimeFactor = solver.Problem3(num);
            Assert.AreEqual(expected, largestPrimeFactor);
        }

    }
}